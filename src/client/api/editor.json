{
  "swagger" : "2.0",
  "info" : {
    "description" : "Lumi",
    "version" : "1.0.0",
    "title" : "Lumi API",
    "contact" : {
      "email" : "jps@Lumi.education"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "virtserver.swaggerhub.com",
  "basePath" : "/JPSchellenberg/Lumi/1.0.0",
  "tags" : [ {
    "name" : "h5p",
    "description" : "h5p operations"
  }, {
    "name" : "fs",
    "description" : "file system"
  } ],
  "schemes" : [ "https", "http" ],
  "paths" : {
    "/h5p" : {
      "get" : {
        "tags" : [ "h5p" ],
        "summary" : "exports a .h5p file from the working cache to the filesystem using the given path",
        "description" : "exports a .h5p file to the filesystem",
        "operationId" : "exportH5P",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "path",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contentId",
          "in" : "query",
          "required" : true,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "h5p successfully exported as .h5p file to the given path",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200"
            }
          },
          "403" : {
            "description" : "path is not accessible"
          }
        }
      },
      "post" : {
        "tags" : [ "h5p" ],
        "summary" : "imports h5p from the filesystem to the working cache",
        "description" : "imports h5p from the filesystem to the working cache",
        "operationId" : "importH5P",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "path",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/body"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "h5p successfully extracted and imported",
            "schema" : {
              "$ref" : "#/definitions/H5P"
            }
          },
          "404" : {
            "description" : ".h5p file not found"
          },
          "406" : {
            "description" : "extraction or validation of .h5p file failed"
          }
        }
      },
      "delete" : {
        "tags" : [ "h5p" ],
        "summary" : "removes a h5p from working cache",
        "description" : "removes a h5p from working cache",
        "operationId" : "deleteH5P",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "contentId",
          "in" : "query",
          "required" : true,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "h5p successfully removed"
          },
          "404" : {
            "description" : "h5p with contentId not found"
          },
          "500" : {
            "description" : "server error"
          }
        }
      },
      "patch" : {
        "tags" : [ "h5p" ],
        "summary" : "updates OR creats a h5p in the working cache",
        "description" : "by patching a h5p you either update a given h5p by its id or if you omit the id you create a new one.\n",
        "operationId" : "updateH5P",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "contentId",
          "in" : "query",
          "description" : "pass an optional contentId",
          "required" : false,
          "type" : "number"
        }, {
          "in" : "body",
          "name" : "h5p",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/H5P"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "h5p updated or created",
            "schema" : {
              "$ref" : "#/definitions/H5P"
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      }
    },
    "/fs" : {
      "get" : {
        "tags" : [ "fs" ],
        "summary" : "get filetree",
        "description" : "getting the filetree for a given path\n",
        "operationId" : "getFiletree",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "path",
          "in" : "query",
          "description" : "pass an optional path",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "filetree generated and served",
            "schema" : {
              "$ref" : "#/definitions/Filetree"
            }
          },
          "404" : {
            "description" : "path not found or restricted access"
          }
        }
      },
      "post" : {
        "tags" : [ "fs" ],
        "summary" : "create a directory or file",
        "description" : "create a folder at a given path\n",
        "operationId" : "createFS",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "path, name and type of the file/directory to be created",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/body_1"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "file/directory created",
            "schema" : {
              "$ref" : "#/definitions/inline_response_201"
            }
          },
          "404" : {
            "description" : "path not found or restricted access"
          }
        }
      },
      "delete" : {
        "tags" : [ "fs" ],
        "summary" : "delete a file or directory",
        "description" : "delete a driectory or file\n",
        "operationId" : "deleteFS",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "path",
          "in" : "query",
          "description" : "name for the folder/file to be deleted",
          "required" : true,
          "type" : "string",
          "format" : "path"
        } ],
        "responses" : {
          "200" : {
            "description" : "file/directory moved"
          },
          "400" : {
            "description" : "path not found or restricted access"
          }
        }
      },
      "patch" : {
        "tags" : [ "fs" ],
        "summary" : "rename/move a folder or file",
        "description" : "rename a folder or file\n",
        "operationId" : "mv",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "old",
          "in" : "query",
          "description" : "name for the folder/file to be moved",
          "required" : true,
          "type" : "string",
          "format" : "path"
        }, {
          "name" : "new",
          "in" : "query",
          "description" : "path where the folder/file should be moved",
          "required" : true,
          "type" : "string",
          "format" : "path"
        } ],
        "responses" : {
          "200" : {
            "description" : "file/directory moved"
          },
          "400" : {
            "description" : "path not found or restricted access"
          }
        }
      }
    }
  },
  "definitions" : {
    "H5P" : {
      "type" : "object",
      "required" : [ "library", "metadata", "parameters" ],
      "properties" : {
        "id" : {
          "type" : "number",
          "example" : 12345.0
        },
        "parameters" : {
          "type" : "object",
          "properties" : { }
        },
        "metadata" : {
          "type" : "object",
          "properties" : { }
        },
        "library" : {
          "type" : "string",
          "example" : "H5P.Example 1.2"
        }
      }
    },
    "Filetree" : {
      "type" : "object",
      "required" : [ "name", "path", "type" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Example"
        },
        "path" : {
          "type" : "string",
          "format" : "path",
          "example" : "/test/Example"
        },
        "type" : {
          "type" : "string",
          "example" : "directory | file"
        },
        "children" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Filetree"
          }
        }
      }
    },
    "inline_response_200" : {
      "type" : "object",
      "properties" : {
        "path" : {
          "type" : "string",
          "format" : "path",
          "example" : "/users/test/abc.h5p"
        }
      }
    },
    "body" : {
      "type" : "object",
      "properties" : {
        "path" : {
          "type" : "string",
          "format" : "path",
          "example" : "/users/test/abc.h5p"
        }
      }
    },
    "body_1" : {
      "type" : "object",
      "properties" : {
        "path" : {
          "type" : "string",
          "format" : "path",
          "example" : "/users/test"
        },
        "name" : {
          "type" : "string",
          "example" : "example.h5p"
        },
        "type" : {
          "type" : "string",
          "example" : "file | directory"
        }
      }
    },
    "inline_response_201" : {
      "type" : "object",
      "properties" : {
        "path" : {
          "type" : "string",
          "format" : "path",
          "example" : "/users/test/abc.h5p"
        },
        "type" : {
          "type" : "string",
          "example" : "file | directory"
        }
      }
    }
  }
}